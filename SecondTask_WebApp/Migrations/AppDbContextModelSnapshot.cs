// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecondTask_WebApp.Data;

#nullable disable

namespace SecondTask_WebApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SecondTask_WebApp.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountClassId")
                        .HasColumnType("int");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSummary")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountClassId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("SecondTask_WebApp.Models.AccountClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("nvarchar(260)");

                    b.Property<int>("FileEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileEntityId");

                    b.ToTable("AccountClasses");
                });

            modelBuilder.Entity("SecondTask_WebApp.Models.Balance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ClosingCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ClosingDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OpeningCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OpeningDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TurnoverCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TurnoverDebit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("SecondTask_WebApp.Models.FileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("nvarchar(260)");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("SecondTask_WebApp.Models.Account", b =>
                {
                    b.HasOne("SecondTask_WebApp.Models.AccountClass", "AccountClass")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountClass");
                });

            modelBuilder.Entity("SecondTask_WebApp.Models.AccountClass", b =>
                {
                    b.HasOne("SecondTask_WebApp.Models.FileEntity", "FileEntity")
                        .WithMany("Classes")
                        .HasForeignKey("FileEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileEntity");
                });

            modelBuilder.Entity("SecondTask_WebApp.Models.Balance", b =>
                {
                    b.HasOne("SecondTask_WebApp.Models.Account", "Account")
                        .WithOne("Balance")
                        .HasForeignKey("SecondTask_WebApp.Models.Balance", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SecondTask_WebApp.Models.Account", b =>
                {
                    b.Navigation("Balance")
                        .IsRequired();
                });

            modelBuilder.Entity("SecondTask_WebApp.Models.AccountClass", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("SecondTask_WebApp.Models.FileEntity", b =>
                {
                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
